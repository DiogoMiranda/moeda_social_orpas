/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void mensagemPanel_event(GPanel source, GEvent event) { //_CODE_:mensagemPanel:470784:
  //println("mensagemPanel - GPanel >> GEvent." + event + " @ " + millis());
} //_CODE_:mensagemPanel:470784:

public void statusText_event(GTextArea source, GEvent event) { //_CODE_:statusText:715939:
  //println("statusText - GTextArea >> GEvent." + event + " @ " + millis());
} //_CODE_:statusText:715939:

public void recebedorPanel_event(GPanel source, GEvent event) { //_CODE_:recebedorPanel:595854:
  //println("recebedorPanel - GPanel >> GEvent." + event + " @ " + millis());
} //_CODE_:recebedorPanel:595854:

public void recebeConta_event(GTextField source, GEvent event) { //_CODE_:recebeConta:955531:
  //println("recebeConta - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:recebeConta:955531:

public void recebePass_event(GPassword source, GEvent event) { //_CODE_:recebePass:772905:
  //println("recebePass - GPassword >> GEvent." + event + " @ " + millis());
} //_CODE_:recebePass:772905:

public void recebeLoginButton_event(GButton source, GEvent event) { //_CODE_:recebeLogin:564018:
  estado_muda(IN_AUT);
  //println("recebeLogin - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:recebeLogin:564018:

public void recebeLogoutButton_event(GButton source, GEvent event) { //_CODE_:recebeLogout:904714:
  //println("recebeLogout - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:recebeLogout:904714:

public void recebeConectado_event(GButton source, GEvent event) { //_CODE_:recebeConectado:349442:
  //println("recebeAcessando - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:recebeConectado:349442:

public void pagadorPanel_event(GPanel source, GEvent event) { //_CODE_:pagadorPanel:537618:
  //println("panel1 - GPanel >> GEvent." + event + " @ " + millis());
} //_CODE_:pagadorPanel:537618:

public void pagaValor_event(GTextField source, GEvent event) { //_CODE_:pagaValor:733497:
  //println("textfield1 - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:pagaValor:733497:

public void pagaConta_event(GTextField source, GEvent event) { //_CODE_:pagaConta:393603:
  //println("textfield1 - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:pagaConta:393603:

public void pagaConfirma_event(GButton source, GEvent event) { //_CODE_:pagaConfirma:882035:
  estado_muda(IN_PAG);
  //println("button1 - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:pagaConfirma:882035:

public void alertaPanel_event(GPanel source, GEvent event) { //_CODE_:alertaPanel:678770:
  //println("panel1 - GPanel >> GEvent." + event + " @ " + millis());
} //_CODE_:alertaPanel:678770:

public void alertaBotao_event(GButton source, GEvent event) { //_CODE_:alertaBotao:606572:
  estado_muda(estado_proximo);
  //println("button1 - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:alertaBotao:606572:

public void senhaPanel_event(GPanel source, GEvent event) { //_CODE_:senhaPanel:815567:
  //println("senhaPanel - GPanel >> GEvent." + event + " @ " + millis());
} //_CODE_:senhaPanel:815567:

public void senhaPass_event(GPassword source, GEvent event) { //_CODE_:senhaPass:881060:
  //println("senhaSenha - GPassword >> GEvent." + event + " @ " + millis());
} //_CODE_:senhaPass:881060:

public void senhaOK_event(GButton source, GEvent event) { //_CODE_:senhaOK:806048:
  estado_muda(IN_SEN);
  //println("senhaOK - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:senhaOK:806048:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  surface.setTitle("ORPAS Moeda Social - RECEBER VALORES");
  mensagemPanel = new GPanel(this, 0, 470, 400, 130, "Mensagens do Sistema");
  mensagemPanel.setCollapsible(false);
  mensagemPanel.setDraggable(false);
  mensagemPanel.setText("Mensagens do Sistema");
  mensagemPanel.setTextBold();
  mensagemPanel.setLocalColorScheme(GCScheme.GOLD_SCHEME);
  mensagemPanel.setOpaque(true);
  mensagemPanel.addEventHandler(this, "mensagemPanel_event");
  statusText = new GTextArea(this, 0, 20, 400, 110, G4P.SCROLLBARS_NONE);
  statusText.setLocalColorScheme(GCScheme.GOLD_SCHEME);
  statusText.setOpaque(true);
  statusText.addEventHandler(this, "statusText_event");
  mensagemPanel.addControl(statusText);
  recebedorPanel = new GPanel(this, 0, 50, 400, 190, "Informações do Recebedor");
  recebedorPanel.setCollapsible(false);
  recebedorPanel.setDraggable(false);
  recebedorPanel.setText("Informações do Recebedor");
  recebedorPanel.setTextBold();
  recebedorPanel.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  recebedorPanel.setOpaque(true);
  recebedorPanel.addEventHandler(this, "recebedorPanel_event");
  recebeConta = new GTextField(this, 20, 50, 250, 20, G4P.SCROLLBARS_NONE);
  recebeConta.setPromptText("conta do recebedor");
  recebeConta.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  recebeConta.setOpaque(true);
  recebeConta.addEventHandler(this, "recebeConta_event");
  recebePass = new GPassword(this, 20, 100, 250, 20);
  recebePass.setMaxWordLength(20);
  recebePass.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  recebePass.setOpaque(true);
  recebePass.addEventHandler(this, "recebePass_event");
  recebeLogin = new GButton(this, 290, 50, 90, 70);
  recebeLogin.setText("Entrar");
  recebeLogin.setTextBold();
  recebeLogin.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  recebeLogin.addEventHandler(this, "recebeLoginButton_event");
  recebeLogout = new GButton(this, 290, 50, 90, 70);
  recebeLogout.setText("Sair");
  recebeLogout.setTextBold();
  recebeLogout.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  recebeLogout.addEventHandler(this, "recebeLogoutButton_event");
  recebeNome = new GLabel(this, 20, 150, 360, 20);
  recebeNome.setTextAlign(GAlign.LEFT, GAlign.MIDDLE);
  recebeNome.setText("Aguardando Usuário");
  recebeNome.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  recebeNome.setOpaque(true);
  recebeContaLabel = new GLabel(this, 20, 30, 250, 20);
  recebeContaLabel.setTextAlign(GAlign.LEFT, GAlign.MIDDLE);
  recebeContaLabel.setText("Número da conta");
  recebeContaLabel.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  recebeContaLabel.setOpaque(false);
  recebePassLabel = new GLabel(this, 20, 80, 250, 20);
  recebePassLabel.setTextAlign(GAlign.LEFT, GAlign.MIDDLE);
  recebePassLabel.setText("Senha");
  recebePassLabel.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  recebePassLabel.setOpaque(false);
  recebeNomeLabel = new GLabel(this, 20, 130, 360, 20);
  recebeNomeLabel.setTextAlign(GAlign.LEFT, GAlign.MIDDLE);
  recebeNomeLabel.setText("Nome do Recebedor");
  recebeNomeLabel.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  recebeNomeLabel.setOpaque(false);
  recebeConectado = new GButton(this, 20, 80, 360, 50);
  recebeConectado.setTextAlign(GAlign.LEFT, GAlign.MIDDLE);
  recebeConectado.setText("CONECTADO");
  recebeConectado.setTextBold();
  recebeConectado.setLocalColorScheme(GCScheme.GOLD_SCHEME);
  recebeConectado.addEventHandler(this, "recebeConectado_event");
  recebedorPanel.addControl(recebeConta);
  recebedorPanel.addControl(recebePass);
  recebedorPanel.addControl(recebeLogin);
  recebedorPanel.addControl(recebeLogout);
  recebedorPanel.addControl(recebeNome);
  recebedorPanel.addControl(recebeContaLabel);
  recebedorPanel.addControl(recebePassLabel);
  recebedorPanel.addControl(recebeNomeLabel);
  recebedorPanel.addControl(recebeConectado);
  mensagemRecebedor = new GLabel(this, 0, 240, 400, 230);
  mensagemRecebedor.setText("RECEBEDOR, POR FAVOR INDIQUE NÚMERO DE CONTA E SENHA");
  mensagemRecebedor.setTextBold();
  mensagemRecebedor.setLocalColorScheme(GCScheme.RED_SCHEME);
  mensagemRecebedor.setOpaque(true);
  pagadorPanel = new GPanel(this, 0, 240, 400, 230, "Informações do Pagador");
  pagadorPanel.setCollapsible(false);
  pagadorPanel.setDraggable(false);
  pagadorPanel.setText("Informações do Pagador");
  pagadorPanel.setTextBold();
  pagadorPanel.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  pagadorPanel.setOpaque(true);
  pagadorPanel.addEventHandler(this, "pagadorPanel_event");
  pagaValor = new GTextField(this, 20, 50, 250, 60, G4P.SCROLLBARS_NONE);
  pagaValor.setPromptText("Digite valor");
  pagaValor.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  pagaValor.setOpaque(true);
  pagaValor.addEventHandler(this, "pagaValor_event");
  pagaConta = new GTextField(this, 20, 140, 250, 20, G4P.SCROLLBARS_NONE);
  pagaConta.setPromptText("digite ou use cartão");
  pagaConta.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  pagaConta.setOpaque(true);
  pagaConta.addEventHandler(this, "pagaConta_event");
  pagaConfirma = new GButton(this, 290, 50, 90, 110);
  pagaConfirma.setText("Pagar");
  pagaConfirma.setTextBold();
  pagaConfirma.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  pagaConfirma.addEventHandler(this, "pagaConfirma_event");
  pagaNome = new GLabel(this, 20, 190, 360, 20);
  pagaNome.setTextAlign(GAlign.LEFT, GAlign.MIDDLE);
  pagaNome.setText("Digite o valor e a conta ou cartão");
  pagaNome.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  pagaNome.setOpaque(true);
  pagaValorLabel = new GLabel(this, 20, 30, 250, 20);
  pagaValorLabel.setTextAlign(GAlign.LEFT, GAlign.MIDDLE);
  pagaValorLabel.setText("Valor a pagar");
  pagaValorLabel.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  pagaValorLabel.setOpaque(false);
  pagaContaLabel = new GLabel(this, 20, 120, 250, 20);
  pagaContaLabel.setTextAlign(GAlign.LEFT, GAlign.MIDDLE);
  pagaContaLabel.setText("Conta do Pagador");
  pagaContaLabel.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  pagaContaLabel.setOpaque(false);
  pagadorPanel.addControl(pagaValor);
  pagadorPanel.addControl(pagaConta);
  pagadorPanel.addControl(pagaConfirma);
  pagadorPanel.addControl(pagaNome);
  pagadorPanel.addControl(pagaValorLabel);
  pagadorPanel.addControl(pagaContaLabel);
  orpasLabel = new GLabel(this, 0, 0, 400, 50);
  orpasLabel.setText("Moeda Social ORPAS");
  orpasLabel.setTextBold();
  orpasLabel.setOpaque(false);
  alertaPanel = new GPanel(this, 20, 50, 360, 410, "Mensagem");
  alertaPanel.setCollapsible(false);
  alertaPanel.setDraggable(false);
  alertaPanel.setText("Mensagem");
  alertaPanel.setTextBold();
  alertaPanel.setLocalColorScheme(GCScheme.ORANGE_SCHEME);
  alertaPanel.setOpaque(true);
  alertaPanel.addEventHandler(this, "alertaPanel_event");
  alertaLabel = new GLabel(this, 30, 70, 300, 270);
  alertaLabel.setText("Aguarde, acessando sistema");
  alertaLabel.setTextBold();
  alertaLabel.setOpaque(false);
  alertaBotao = new GButton(this, 30, 330, 300, 40);
  alertaBotao.setText("OK");
  alertaBotao.setTextBold();
  alertaBotao.setLocalColorScheme(GCScheme.RED_SCHEME);
  alertaBotao.addEventHandler(this, "alertaBotao_event");
  alertaPanel.addControl(alertaLabel);
  alertaPanel.addControl(alertaBotao);
  senhaPanel = new GPanel(this, 0, 50, 400, 410, "DIGITE SUA SENHA");
  senhaPanel.setCollapsible(false);
  senhaPanel.setDraggable(false);
  senhaPanel.setText("DIGITE SUA SENHA");
  senhaPanel.setTextBold();
  senhaPanel.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  senhaPanel.setOpaque(true);
  senhaPanel.addEventHandler(this, "senhaPanel_event");
  senhaNome = new GLabel(this, 20, 50, 360, 80);
  senhaNome.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  senhaNome.setOpaque(true);
  senhaNomeLabel = new GLabel(this, 20, 30, 360, 20);
  senhaNomeLabel.setTextAlign(GAlign.LEFT, GAlign.MIDDLE);
  senhaNomeLabel.setText("Nome do pagador");
  senhaNomeLabel.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  senhaNomeLabel.setOpaque(false);
  senhaValor = new GLabel(this, 20, 170, 360, 80);
  senhaValor.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  senhaValor.setOpaque(true);
  senhaValorLabel = new GLabel(this, 20, 150, 360, 20);
  senhaValorLabel.setTextAlign(GAlign.LEFT, GAlign.MIDDLE);
  senhaValorLabel.setText("Valor a pagar");
  senhaValorLabel.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  senhaValorLabel.setOpaque(false);
  senhaPass = new GPassword(this, 20, 290, 350, 30);
  senhaPass.setMaxWordLength(20);
  senhaPass.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  senhaPass.setOpaque(true);
  senhaPass.addEventHandler(this, "senhaPass_event");
  senhaSenhaLabel = new GLabel(this, 20, 270, 350, 20);
  senhaSenhaLabel.setTextAlign(GAlign.LEFT, GAlign.MIDDLE);
  senhaSenhaLabel.setText("Senha");
  senhaSenhaLabel.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  senhaSenhaLabel.setOpaque(false);
  senhaOK = new GButton(this, 20, 330, 350, 70);
  senhaOK.setText("PAGAR");
  senhaOK.setTextBold();
  senhaOK.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  senhaOK.addEventHandler(this, "senhaOK_event");
  senhaPanel.addControl(senhaNome);
  senhaPanel.addControl(senhaNomeLabel);
  senhaPanel.addControl(senhaValor);
  senhaPanel.addControl(senhaValorLabel);
  senhaPanel.addControl(senhaPass);
  senhaPanel.addControl(senhaSenhaLabel);
  senhaPanel.addControl(senhaOK);
}

// Variable declarations 
// autogenerated do not edit
GPanel mensagemPanel; 
GTextArea statusText; 
GPanel recebedorPanel; 
GTextField recebeConta; 
GPassword recebePass; 
GButton recebeLogin; 
GButton recebeLogout; 
GLabel recebeNome; 
GLabel recebeContaLabel; 
GLabel recebePassLabel; 
GLabel recebeNomeLabel; 
GButton recebeConectado; 
GLabel mensagemRecebedor; 
GPanel pagadorPanel; 
GTextField pagaValor; 
GTextField pagaConta; 
GButton pagaConfirma; 
GLabel pagaNome; 
GLabel pagaValorLabel; 
GLabel pagaContaLabel; 
GLabel orpasLabel; 
GPanel alertaPanel; 
GLabel alertaLabel; 
GButton alertaBotao; 
GPanel senhaPanel; 
GLabel senhaNome; 
GLabel senhaNomeLabel; 
GLabel senhaValor; 
GLabel senhaValorLabel; 
GPassword senhaPass; 
GLabel senhaSenhaLabel; 
GButton senhaOK; 